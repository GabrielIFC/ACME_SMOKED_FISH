from db import get_database
from autorizaci√≥n_usuarios import get_current_user

# Conexi√≥n a la base de datos
db = get_database()
pedidos_col = db["pedidos"]
stock_col = db["stock"]

def vender_salm√≥n():
    if get_current_user() is None or get_current_user()['rol'] != 'vendedor':
        print("‚ùå Solo los vendedores pueden realizar ventas.")
        return

    print("\nüè∑Ô∏è Venta de Salm√≥n")
    print("Tipos de salm√≥n disponibles:")
    print("1. Atl√°ntico - $5000 por kilo")
    print("2. N√≥rdico - $7000 por kilo")
    print("3. Pac√≠fico - $3000 por kilo")

    salmones = {
        "Atl√°ntico": 5000,
        "N√≥rdico": 7000,
        "Pac√≠fico": 3000
    }

    pedido = []
    tipos_vendidos = set()

    while len(pedido) < 3:
        tipo = input("\nSeleccione el tipo de salm√≥n (Atl√°ntico, N√≥rdico, Pac√≠fico o 'salir' para terminar): ").capitalize()
        if tipo == 'Salir':
            break
        if tipo not in salmones:
            print("‚ùå Tipo de salm√≥n inv√°lido.")
            continue
        if tipo in tipos_vendidos:
            print(f"‚ùå Ya has vendido el tipo de salm√≥n {tipo} en esta venta. Por favor, elige otro tipo.")
            continue

        try:
            cantidad = float(input(f"Ingrese la cantidad de {tipo} (en kilos): "))
            if cantidad <= 0:
                print("‚ùå La cantidad debe ser mayor a cero.")
                continue
        except ValueError:
            print("‚ùå Entrada inv√°lida. Ingrese un n√∫mero.")
            continue

        # Verificar stock disponible
        stock = stock_col.find_one({"tipo": tipo})
        if not stock or stock["stock_kilos"] < cantidad:
            disponible = stock["stock_kilos"] if stock else 0
            print(f"‚ùå No hay suficiente stock de {tipo}. Disponible: {disponible} kg.")
            continue

        # Descontar del stock
        stock_col.update_one(
            {"tipo": tipo},
            {"$inc": {"stock_kilos": -cantidad}}
        )

        pedido.append({"tipo": tipo, "cantidad": cantidad, "precio": salmones[tipo]})
        tipos_vendidos.add(tipo)

    if not pedido:
        print("‚ùå No se realiz√≥ ninguna venta.")
        return

    total = sum([item['cantidad'] * item['precio'] for item in pedido])
    nuevo_pedido = {
        "usuario": get_current_user()['nombre'],
        "detalle": pedido,
        "total": total
    }
    pedidos_col.insert_one(nuevo_pedido)

    print(f"\n‚úÖ Venta registrada con √©xito. Total: ${total}")

    # Mostrar stock actualizado
    print("\nüì¶ Stock actualizado:")
    for doc in stock_col.find():
        print(f"{doc['tipo']}: {doc['stock_kilos']} kg disponibles")
